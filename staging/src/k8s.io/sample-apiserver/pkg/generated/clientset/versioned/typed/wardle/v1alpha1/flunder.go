/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	generic "k8s.io/client-go/generic"
	v1alpha1 "k8s.io/sample-apiserver/pkg/apis/wardle/v1alpha1"
	wardlev1alpha1 "k8s.io/sample-apiserver/pkg/generated/applyconfiguration/wardle/v1alpha1"
	scheme "k8s.io/sample-apiserver/pkg/generated/clientset/versioned/scheme"
)

// FlundersGetter has a method to return a FlunderInterface.
// A group's client should implement this interface.
type FlundersGetter interface {
	Flunders(namespace string) FlunderInterface
}

// FlunderInterface has methods to work with Flunder resources.
type FlunderInterface interface {
	generic.Interface[*v1alpha1.Flunder, *v1alpha1.FlunderList]
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	generic.StatusUpdater[*v1alpha1.Flunder]
	generic.Applier[*v1alpha1.Flunder, *wardlev1alpha1.FlunderApplyConfiguration]
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	generic.StatusApplier[*v1alpha1.Flunder, *wardlev1alpha1.FlunderApplyConfiguration]
	FlunderExpansion
}

// flunders implements FlunderInterface
type flunders struct {
	*generic.TypeClientWithListAndApply[*v1alpha1.Flunder, *v1alpha1.FlunderList, *wardlev1alpha1.FlunderApplyConfiguration]
}

// newFlunders returns a Flunders
func newFlunders(c *WardleV1alpha1Client, namespace string) *flunders {
	return &flunders{
		generic.NewNamespacedWithListAndApply[*v1alpha1.Flunder, *v1alpha1.FlunderList, *wardlev1alpha1.FlunderApplyConfiguration](
			"flunders",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1alpha1.Flunder { return &v1alpha1.Flunder{} },
			func() *v1alpha1.FlunderList { return &v1alpha1.FlunderList{} }),
	}
}
